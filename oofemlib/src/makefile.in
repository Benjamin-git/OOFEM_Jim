# $Header: /home/cvs/bp/oofem/oofemlib/src/makefile.in,v 1.16.4.2 2004/04/08 11:39:21 bp Exp $ 


#   makefile 1.27 95/02/27 08:39:22
#


.SUFFIXES:  .h .C

SHELL      = /bin/bash
#
PETSC_DIR  = @PETSC_DIR@
PETSC_ARCH = @PETSC_ARCH@
BOPT       = @PETSC_BOPT@
@PETSC_MAKE_INCLUDE@

INCLUDE_DIR=  @IML_INCLUDES@ @SPOOLES_INCLUDES@ @PETSC_INCLUDES@ @PARMETIS_INCLUDES@ @DSS_INCLUDES@
GRAPHICS_INCLUDE_DIR= @CKIT_INCLUDES@ @ELIXIR_INCLUDES@
PARALLEL_INCLUDE_DIR= @MPI_INCLUDES@
PARALLEL_SYMBOLS    = @MPI_MODULE_SYMBOLS@
#   Libraries
LOCAL_LIBSG= @ELIXIR_LIBS@ @CKIT_LIB@
SYS_LIBSG  = @X_PRE_LIBS@ @X_LIBS@ @X_EXTRA_LIBS@
SYS_LIBS   = @LIBS@
#Compiler flags
#OPTFLAGS used only for non-debug version
#CFLAGS     = -64 -exceptions -prelink -ptused  #required on SGI
CFLAGS      = @MODULE_SYMBOLS@
RELEASE_FLAGS = -O -Wall @CXXFLAGS@
DEBUG_FLAGS   = -g -Wall @CXXFLAGS@    #recomended on Linux
OOFEG_FLAGS   = @OOFEG_DIRECTIVES@
LDFLAGS         = $(CFLAGS) @LDFLAGS@
#
# 
LD         = @CXX@
CC         = @CXX@
SLD         = @SERIAL_CXX@
SCC         = @SERIAL_CXX@
PLD        = @MPI_CXX@
PCC        = @MPI_CXX@
#
AR         = ar -r
RM         = rm -f
PROGRAM    = @TARGETS@

#
#
# You probably don't need to change anything below here.
#
#######################################################################
OOFEMLIB_OBJ_PATH = ../oofem_obj
OOFEGLIB_OBJ_PATH = ../oofeg_obj
POOFEMLIB_OBJ_PATH = ../poofem_obj


srcs0=
srcs1=  oofeggraphiccontext.C 

srcs2= generalbc.C bodyload.C boundary.C clock.C cltypes.C column.C conTable.C constant.C crosssection.C deadwght.C dictionr.C dof.C domain.C element.C engngm.C femcmpnn.C flotarry.C flotmtrx.C freestor.C error.C logger.C emptycs.C feinterpol.C

srcs3=gausspnt.C initial.C intarray.C isolinearelasticmaterial.C ldltfact.C linearelasticmaterial.C load.C loadtime.C rowcol.C skylineu.C imlsolver.C compcol.C iluprecond.C dyncompcol.C symcompcol.C precond.C icprecond.C dyncomprow.C ilucomprowprecond.C voidprecond.C sparselinsystemnm.C sparsegeneigenvalsystemnm.C sparsenonlinsystemnm.C inverseit.C

srcs4=material.C mathfem.C matrix.C matstatus.C nlstructuralelement.C node.C nodload.C nummet.C simplecrosssection.C skyline.C stationaryflow.C inputrecord.C tokenizer.C strreader.C structuralcrosssection.C structuralelement.C structuralmaterial.C structengngmodel.C

srcs5=structuralms.C timestep.C structtemperatureload.C dofmanager.C elementside.C integrationrule.C boundaryload.C gaussintegrationrule.C masterdof.C simpleslavedof.C slavedof.C nonlocalmaterialext.C structuralnonlocalmaterialext.C linearedgeload.C constantedgeload.C constantsurfaceload.C lobattoir.C

srcs6=outputmanager.C compiler.C parser.C rigidarmnode.C spatiallocalizer.C dummylocalizer.C octreelocalizer.C nodalrecoverymodel.C util.C sloangraph.C sloangraphnode.C sloanlevelstruct.C metastep.C diagpre.C exportmodule.C exportmodulemanager.C zznodalrecoverymodel.C nodalaveragingrecoverymodel.C sprnodalrecoverymodel.C

#srcs6=remotemasterdof.C sharedmasterdof.C outputmanager.C nulldof.C compiler.C parser.C rigidarmnode.C spatiallocalizer.C dummylocalizer.C octreelocalizer.C nodalrecoverymodel.C util.C sloangraph.C sloangraphnode.C sloanlevelstruct.C metastep.C diagpre.C exportmodule.C exportmodulemanager.C zznodalrecoverymodel.C nodalaveragingrecoverymodel.C sprnodalrecoverymodel.C

srcs7=calmls.C nrsolver.C nrsolver2.C subspaceit.C gjacobi.C linesearch.C nonlocalbarrier.C primaryfield.C field.C fieldmanager.C oofemtxtdatareader.C oofemtxtinputrecord.C buffereddatareader.C stressstrainbasevector.C stressvector.C strainvector.C fei1dlin.C  fei2dquadlin.C  fei2dtrlin.C fei3dtrlin.C fei3dhexalin.C spoolessparsemtrx.C spoolessolver.C petscsparsemtrx.C petscsolver.C petsccontext.C hangingnode.C pointload.C

srcs8=errorestimator.C remeshingcrit.C primaryunknownmapper.C materialmappingalgorithm.C dofdistributedprimaryfield.C domaintransactionmanager.C

srcs9=geotoolbox.C dss.C dsssolver.C

#obsolete 
srcs99=ppdeelement.C heatcrosssection.C heatmaterial.C isolinearheatmat.C

#parallel
psrcs1=communicator.C processcomm.C problemcomm.C combuff.C petscordering.C dyncombuff.C loadballancer.C parmetisloadballancer.C nonlocalmatwtp.C

all_src = $(srcs0) $(srcs1) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs99) $(psrcs1) 
oofem_src = $(srcs0) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs99) 
oofeg_src = $(srcs1) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs99) 
poofem_src = $(srcs0) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs99) $(psrcs1) 

##
## object files
##
oofem_objs := $(oofem_src:.C=.o)
oofeg_objs := $(oofeg_src:.C=.o)
poofem_objs := $(poofem_src:.C=.o)

oofemLib_Release_objs := $(foreach obj,$(oofem_objs),$(OOFEMLIB_OBJ_PATH)/Release/$(obj))
oofemLib_Debug_objs   := $(foreach obj,$(oofem_objs),$(OOFEMLIB_OBJ_PATH)/Debug/$(obj))

oofegLib_Release_objs := $(foreach obj,$(oofeg_objs),$(OOFEGLIB_OBJ_PATH)/Release/$(obj))
oofegLib_Debug_objs   := $(foreach obj,$(oofeg_objs),$(OOFEGLIB_OBJ_PATH)/Debug/$(obj))

poofemLib_Release_objs := $(foreach obj,$(poofem_objs),$(POOFEMLIB_OBJ_PATH)/Release/$(obj))
poofemLib_Debug_objs   := $(foreach obj,$(poofem_objs),$(POOFEMLIB_OBJ_PATH)/Debug/$(obj))


all:: $(PROGRAM) 

oofem-release: oofemlib-release
oofem-debug: oofemlib-debug
oofeg-release: oofeglib-release
oofeg-debug: oofeglib-debug
poofem-release: poofemlib-release
poofem-debug: poofemlib-debug



$(OOFEMLIB_OBJ_PATH)/Release/%.o:	%.C
	@if [ ! -d $(OOFEMLIB_OBJ_PATH)/Release ]; then mkdir -p $(OOFEMLIB_OBJ_PATH)/Release; fi
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

$(OOFEMLIB_OBJ_PATH)/Release/%.o:	%.c
	@if [ ! -d $(OOFEMLIB_OBJ_PATH)/Release ]; then mkdir -p $(OOFEMLIB_OBJ_PATH)/Release; fi
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

$(OOFEMLIB_OBJ_PATH)/Debug/%.o:	%.C
	@if [ ! -d $(OOFEMLIB_OBJ_PATH)/Debug ]; then mkdir -p $(OOFEMLIB_OBJ_PATH)/Debug; fi
	$(CC) -c $(DEBUG_FLAGS) $(CFLAGS) $(INCLUDE_DIR) $< -o $@

$(OOFEMLIB_OBJ_PATH)/Debug/%.o:	%.c
	@if [ ! -d $(OOFEMLIB_OBJ_PATH)/Debug ]; then mkdir -p $(OOFEMLIB_OBJ_PATH)/Debug; fi
	$(CC) -c $(DEBUG_FLAGS) $(CFLAGS) $(INCLUDE_DIR) $< -o $@

$(OOFEGLIB_OBJ_PATH)/Release/%.o:	%.C
	@if [ ! -d $(OOFEGLIB_OBJ_PATH)/Release ]; then mkdir -p $(OOFEGLIB_OBJ_PATH)/Release; fi
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) -D__OOFEG $(OOFEG_FLAGS) $< -o $@

$(OOFEGLIB_OBJ_PATH)/Release/%.o:	%.c
	@if [ ! -d $(OOFEGLIB_OBJ_PATH)/Release ]; then mkdir -p $(OOFEGLIB_OBJ_PATH)/Release; fi
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) -D__OOFEG $(OOFEG_FLAGS) $< -o $@

$(OOFEGLIB_OBJ_PATH)/Debug/%.o:	%.C
	@if [ ! -d $(OOFEGLIB_OBJ_PATH)/Debug ]; then mkdir -p $(OOFEGLIB_OBJ_PATH)/Debug; fi
	$(CC) -c $(CFLAGS) $(DEBUG_FLAGS) $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) -D__OOFEG $(OOFEG_FLAGS) $< -o $@

$(OOFEGLIB_OBJ_PATH)/Debug/%.o:	%.c
	@if [ ! -d $(OOFEGLIB_OBJ_PATH)/Debug ]; then mkdir -p $(OOFEGLIB_OBJ_PATH)/Debug; fi
	$(CC) -c $(CFLAGS) $(DEBUG_FLAGS) $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) -D__OOFEG $(OOFEG_FLAGS) $< -o $@

$(POOFEMLIB_OBJ_PATH)/Release/%.o:	%.C
	@if [ ! -d $(POOFEMLIB_OBJ_PATH)/Release ]; then mkdir -p $(POOFEMLIB_OBJ_PATH)/Release; fi
	$(PCC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) -D__PARALLEL_MODE $(PARALLEL_SYMBOLS) $< -o $@

$(POOFEMLIB_OBJ_PATH)/Release/%.o:	%.c
	@if [ ! -d $(POOFEMLIB_OBJ_PATH)/Release ]; then mkdir -p $(POOFEMLIB_OBJ_PATH)/Release; fi
	$(PCC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) -D__PARALLEL_MODE $(PARALLEL_SYMBOLS) $< -o $@

$(POOFEMLIB_OBJ_PATH)/Debug/%.o:	%.C
	@if [ ! -d $(POOFEMLIB_OBJ_PATH)/Debug ]; then mkdir -p $(POOFEMLIB_OBJ_PATH)/Debug; fi
	$(PCC) -c $(CFLAGS) $(DEBUG_FLAGS) $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) -D__PARALLEL_MODE $(PARALLEL_SYMBOLS) $< -o $@

$(POOFEMLIB_OBJ_PATH)/Debug/%.o:	%.c
	@if [ ! -d $(POOFEMLIB_OBJ_PATH)/Debug ]; then mkdir -p $(POOFEMLIB_OBJ_PATH)/Debug; fi
	$(PCC) -c $(CFLAGS) $(DEBUG_FLAGS) $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) -D__PARALLEL_MODE $(PARALLEL_SYMBOLS) $< -o $@

#
# local targets
#

oofemlib-release:  $(OOFEMLIB_OBJ_PATH)/Release/oofemlib.a 

oofemlib-debug:  $(OOFEMLIB_OBJ_PATH)/Debug/oofemlib.a

oofeglib-release: $(OOFEGLIB_OBJ_PATH)/Release/oofeglib.a

oofeglib-debug: $(OOFEGLIB_OBJ_PATH)/Debug/oofeglib.a

poofemlib-release:  $(POOFEMLIB_OBJ_PATH)/Release/poofemlib.a

poofemlib-debug:  $(POOFEMLIB_OBJ_PATH)/Debug/poofemlib.a



$(OOFEMLIB_OBJ_PATH)/Release/oofemlib.a:  $(oofemLib_Release_objs) 
	rm -f $(OOFEMLIB_OBJ_PATH)/Release/oofemlib.a
	@echo $(AR) $(OOFEMLIB_OBJ_PATH)/Release/oofemlib.a
	@$(AR) $(OOFEMLIB_OBJ_PATH)/Release/oofemlib.a $(oofemLib_Release_objs) 

$(OOFEMLIB_OBJ_PATH)/Debug/oofemlib.a:  $(oofemLib_Debug_objs) 
	rm -f $(OOFEMLIB_OBJ_PATH)/Debug/oofemlib.a
	@echo $(AR) $(OOFEMLIB_OBJ_PATH)/Debug/oofemlib.a
	@$(AR) $(OOFEMLIB_OBJ_PATH)/Debug/oofemlib.a $(oofemLib_Debug_objs)

$(OOFEGLIB_OBJ_PATH)/Release/oofeglib.a: $(oofegLib_Release_objs) 
	rm -f $(OOFEGLIB_OBJ_PATH)/Release/oofeglib.a
	@echo $(AR) $(OOFEGLIB_OBJ_PATH)/Release/oofeglib.a
	@$(AR) $(OOFEGLIB_OBJ_PATH)/Release/oofeglib.a  $(oofegLib_Release_objs) 

$(OOFEGLIB_OBJ_PATH)/Debug/oofeglib.a: $(oofegLib_Debug_objs) 
	rm -f $(OOFEGLIB_OBJ_PATH)/Debug/oofeglib.a
	@echo $(AR) $(OOFEGLIB_OBJ_PATH)/Debug/oofeglib.a
	@$(AR) $(OOFEGLIB_OBJ_PATH)/Debug/oofeglib.a  $(oofegLib_Debug_objs)

$(POOFEMLIB_OBJ_PATH)/Release/poofemlib.a:  $(poofemLib_Release_objs) 
	rm -f $(POOFEMLIB_OBJ_PATH)/Release/poofemlib.a
	@echo $(AR) $(POOFEMLIB_OBJ_PATH)/Release/poofemlib.a
	@$(AR) $(POOFEMLIB_OBJ_PATH)/Release/poofemlib.a $(poofemLib_Release_objs) 

$(POOFEMLIB_OBJ_PATH)/Debug/poofemlib.a:  $(poofemLib_Debug_objs) 
	rm -f $(POOFEMLIB_OBJ_PATH)/Debug/poofemlib.a
	@echo $(AR) $(POOFEMLIB_OBJ_PATH)/Debug/poofemlib.a
	@$(AR) $(POOFEMLIB_OBJ_PATH)/Debug/poofemlib.a $(poofemLib_Debug_objs) 


clean: clean-oofem clean-oofeg clean-poofem

clean-oofem:
	rm -fr $(OOFEMLIB_OBJ_PATH)

clean-oofeg:
	rm -fr $(OOFEGLIB_OBJ_PATH)

clean-poofem:
	rm -fr $(POOFEMLIB_OBJ_PATH)


makedepend :  $(all_src) 
	touch tmp
	makedepend -D__MAKEDEPEND -p$(OOFEMLIB_OBJ_PATH)/Release/  $(INCLUDE_DIR) $(oofem_src)
	makedepend -D__MAKEDEPEND -p$(OOFEMLIB_OBJ_PATH)/Debug/  $(INCLUDE_DIR) $(oofem_src) -f tmp
	cp makefile makefile.tmp
	cat makefile.tmp tmp > makefile
	makedepend -D__MAKEDEPEND -p$(OOFEGLIB_OBJ_PATH)/Release/  -D__OOFEG  $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) $(oofeg_src) -f tmp
	cp makefile makefile.tmp
	cat makefile.tmp tmp > makefile
	makedepend -D__MAKEDEPEND -p$(OOFEGLIB_OBJ_PATH)/Debug/  -D__OOFEG  $(INCLUDE_DIR) $(GRAPHICS_INCLUDE_DIR) $(oofeg_src) -f tmp
	cp makefile makefile.tmp
	cat makefile.tmp tmp > makefile
	makedepend -D__MAKEDEPEND -p$(POOFEMLIB_OBJ_PATH)/Release/ -D__PARALLEL_MODE $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) $(poofem_src) -f tmp
	cp makefile makefile.tmp
	cat makefile.tmp tmp > makefile
	makedepend -D__MAKEDEPEND -p$(POOFEMLIB_OBJ_PATH)/Debug/  -D__PARALLEL_MODE $(INCLUDE_DIR) $(PARALLEL_INCLUDE_DIR) $(poofem_src) -f tmp
	cp makefile makefile.tmp
	cat makefile.tmp tmp > makefile
	rm makefile.tmp tmp tmp.bak


